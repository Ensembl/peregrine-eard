program "group" "program" 1;

world code wc(?X) -> ?X { impl(r1: ?X) -> r2: ?X { opcode 21, r2 ,r1; } }
function c(x) { let y = wc(x); y }

print(format(c("hello, world!")));
print(format(c([1,2,3])));
print(format(c(["hi",...])));

let a = c(1);
let b = c(true);
let c = c("hello");

let x = c([a,2,3]);
let y = c([b,false]);
let z = c([c,"world"]);

print(format(x));
print(format(y));
print(format(z));

let x = c([a,2,3]);
let y = c([b,false]);
let z = c([c,"world"]);

print(format(x));
print(format(y));
print(format(z));
print(format([c(6),...]));
print(format([c(true),...]));
print(format([c("boo"),...]));

print(format(max(-1,2)));
print(format(min(-1,2)));

let a = c(2);
let b = c(3);

print(format(max(a,b)));
print(format(max(a,b)));

let a = c(2);
let b = c(3);

print(format(min(a,b)));
print(format(min(a,b)));

print(format(max([1,2,3],[2,1,5])));
print(format(min([1,2,3],[2,1,5])));
print(format(max([1,2,3],2)));
print(format(min([1,2,3],2)));
print(format(max([1,2,3],[2,...])));
print(format(min([1,2,3],[2,...])));

let a = c([1,2,3]);
let b = c([2,1,5]);
let c = c(2);
let d = c([2,...]);

print(format(max(a,b)));
print(format(min(a,b)));
print(format(max(a,c)));
print(format(min(a,c)));
print(format(max(a,d)));
print(format(min(a,d)));
c(a);
print(format(max(c(a),c(b))));
print(format(min(c(a),c(b))));
print(format(max(c(a),c(c))));
print(format(min(c(a),c(c))));
print(format(max(c(a),c(d))));
print(format(min(c(a),c(d))));

call_up();

let a : length(!x) = [1,2,3];
let b : length(!x) = [4,5,6];

print(format(c(2)+c(3)));
print(format(c([1,2])+c(3)));
print(format(c([1,2])+c([3,4])));
print(format(c([1,2])+c([5.2,...])));

print(format(c(2)-c(3)));
print(format(c([1,2])-c(3)));
print(format(c([1,2])-c([3,4])));
print(format(c([1,2])-c([5.2,...])));

print(format(c(2)*c(3)));
print(format(c([1,2])*c(3)));
print(format(c([1,2])*c([3,4])));
print(format(c([1,2])*c([5.2,...])));

print(format(c(19)/c(2)));
print(format(c([1,2])/c(2)));
print(format(c([1,2])/c([2,4])));
print(format(c([1,2])/c([0.25,...])));

print(format(c(19)%c(2)));
print(format(c([1,2])%c(2)));
print(format(c([1,5])%c([2,3])));
print(format(c([3,10])%c([3,...])));

let a = c(3);
print(format(a>2));
print(format(a>3));
print(format(a>4));
print(format(a>=2));
print(format(a>=3));
print(format(a>=4));

let a = c([1,2,3,4]);
print(format(a>2));
print(format(a>3));
print(format(a>4));
print(format(a>=2));
print(format(a>=3));
print(format(a>=4));

let a = c([1,2,3,4]);
let b = c([4,3,3,1]);
print(format(a>b));
print(format(a>=b));

print(format(c(3)==3));
print(format(c(3)==4));
print(format(c([3,4])==3));
print(format(c([3,4,3,4])==[3,3,4,4]));

print(format(c(false)==false));
print(format(c(false)==true));
print(format(c([false,true])==false));
print(format(c([false,true,false,true])==[false,false,true,true]));

print(format(c("3")=="3"));
print(format(c("3")=="4"));
print(format(c(["3","4"])=="3"));
print(format(c(["3","4","3","4"])==["3","3","4","4"]));

let f = c(false);
let t = c(true);

print(format(t&&f));
print(format(t&&t));
print(format([f,t]&&t));
print(format([f,t,f,t]&&[f,f,t,t]));

print(format(f||f));
print(format(f||t));
print(format([f,t]||f));
print(format([f,t,f,t]||[f,f,t,t]));

let a = c(6);
let b = c([-2,-1,1,2]);

print(format(-a));
print(format(-b));

let f = c(false);
let t = c(!f);

print(format(!f));
print(format(![t,f,!t,!f]));

print(format(repeat(c(true),5)));
print(format(repeat(c("hi"),0)));
print(format(repeat(c(3),10)));

let a = c([1,2,3,4,5]);
let b = c([6,7,8,9,0]);

print(format(if(c(false),a,b)));
print(format(if(c(true),a,b)));
print(format(set_skip(a,c([true,true,false,true,false]),b)));
print(format(set_skip(a,c([false,...]),b)));
print(format(set_skip(a,c([true,...]),b)));

print(format(set_skip(a,c([true,true,false,true,false]),[-1,...])));
print(format(set_skip(a,c([false,...]),[-1,...])));
print(format(set_skip(a,c([true,...]),[-1,...])));

print(format(set(a,c([true,true,false,true,false]),b)));
print(format(set(a,c([false,...]),b)));
print(format(set(a,c([true,...]),b)));

print(format(set(a,c([true,true,false,true,false]),[-1,...])));
print(format(set(a,c([false,...]),[-1,...])));
print(format(set(a,c([true,...]),[-1,...])));

print(format(set_at(a,[2,4],b)));
print(format(set_at(a,[2,4],[-1,...])));

print(format(set_from(a,[2,4],b)));
print(format(set_from(a,[2,4],[-1,...])));

print(format(index(a,2)));
print(format(index(a,[2,3,4])));

print(format(count(c([1,7,4,2]))));
print(format(enumerate(c([1,7,4,2]))));

print(format(join(c(","),[])));
print(format(join(c(","),["hello"])));
print(format(join(c(","),["hello","world"])));

print(format(push_str(c("hello"),", world")));
print(format(push_str(["hello","goodbye"],c(", world"))));
print(format(push_str(["hello",...],c(", world"))));
print(format(push_str(c("hello, "),["mercury","venus", "earth", "mars"])));
print(format(push_str(["a","b"],["x","y"])));
print(format(push_str(c(["a","b"]),["x","y"])));

print(format(split(",",c("1,2,3,4,5"))));
print(format(template("first: {0}; second: {1}",c(["1st","2nd"]))));

let x = split_start(",",c([
    "fred,flintstone,bedrock,47",
    "wilma,flintstone,bedrock,39",
    "barney,rubble,bedrock,52",
    "pebbles,flintstone,bedrock,2"
]));
print(format(split_get(x,0)));
print(format(split_get(x,3)));

let t = template_start("{0}/{1}");
template_set(t,0,["salt","raw","blake"]);
template_set(t,1,["pepper","cooked","avon"]);
print(format(template_end(t)));

print(format(any(c([]))));
print(format(any(c([false,false]))));
print(format(any(c([false,true]))));

print(format(all(c([]))));
print(format(all(c([true,true]))));
print(format(all(c([false,true]))));
print(format(position(c([false,true,false,true]))));

let a = c(true);
let b = c([false,true]);
let c = c(3);
let d = c([0,1]);
let e = c("8");
let f = c(["","8"]);

print(format(to_boolean(a)));
print(format(to_boolean(b)));
print(format(to_boolean(c)));
print(format(to_boolean(d)));
print(format(to_boolean(e)));
print(format(to_boolean(f)));

print(format(to_string(a)));
print(format(to_string(b)));
print(format(to_string(c)));
print(format(to_string(d)));
print(format(to_string(e)));
print(format(to_string(f)));

print(format(to_number(a)));
print(format(to_number(b)));
print(format(to_number(c)));
print(format(to_number(d)));
print(format(to_number(e)));
print(format(to_number(f)));

print(format(len(c([1,2,3]))));
print(format(len(c([false,true]))));
print(format(len(c(["a","b","c"]))));

print(format(to_number(c([0,1,2]))));
print(format(to_number(c(5))));

print(format(to_boolean(c([0,1,2]))));
print(format(to_boolean(c(5))));

print(format(min_seq([5,1,3,4,6])));
print(format(max_seq([5,1,3,4,6])));

print(format(base_flip("CgAtn")));
print(format(base_flip(["CgAtn","AnNnA"])));

print(format(select([1,2,3,4,5],[false,true,true,false,true])));

print(format(ruler_interval(1000000,10,[1,2,5])));
print(format(ruler_interval(2000000,10,[1,2,5])));
print(format(ruler_interval(8000000,10,[1,2,5])));

print(format(ruler_markings(200000,1000000,2000000)));
print(format(ruler_markings(500000,1000000,3000000)));
print(format(ruler_markings(1000000,1000000,9000000)));

print(format(comma_format(100000)));
print(format(comma_format([100000,110000,101000,100100,1000000,1,100,0])));

let (a,b,c) = gaps(
    [1000,3000],
    [1999,3999],
    [1000,1300,2100],
    [1100,1400,2700],
    [0,0,1]
);

print(format(a));
print(format(b));
print(format(c));

let (a,b,c) = gaps([45453],[95256],[86624,86692],[86624,86880],[0,0]);

print(format(a));
print(format(b));
print(format(c));

print(format(find(["A","B","C"],"B")));
print(format(find(["A","B","C"],["C","C","A"])));
